const form=document.querySelector("#task-form"),tasklist=document.querySelector(".tasklist"),clearTasks=document.querySelector(".clear-tasks"),filter=document.querySelector("#filter"),taskInput=document.querySelector("#task");let tasks=[],completed=[];class Tasklist{static init(){null!==localStorage.getItem("tasks")&&(tasks=JSON.parse(localStorage.getItem("tasks"))),null!==localStorage.getItem("completed")&&(completed=JSON.parse(localStorage.getItem("completed"))),tasks.forEach(function(t){Tasklist.renderTask(t)}),Tasklist.filter()}static renderTask(t){let e;completed.indexOf(t)>-1&&(e="checked");const s=`\n                <li class="d-flex list-group-item task">\n                    <div class="form-check">\n                        <input type="checkbox" ${e} class="form-check-input" id="${t}">\n                        <label class="form-check-label" for="${t}">${t}</label>\n                    </div>\n                    <a href="#" class="ml-auto delete-task">\n                        <i class="far fa-trash-alt"></i>\n                    </a>\n                </li>`,a=document.createRange().createContextualFragment(s.trim());tasklist.appendChild(a)}static add(t){t.preventDefault(),""===taskInput.value?alert("No task name given."):(tasks.push(taskInput.value),Tasklist.renderTask(taskInput.value),taskInput.value="",Tasklist.store(tasks),Tasklist.filter())}static remove(t){t.target.parentElement.classList.contains("delete-task")&&(t.preventDefault(),confirm("Delete task: "+t.target.parentElement.parentElement.textContent.trim())&&(tasks.forEach(function(e,s){t.target.parentElement.parentElement.textContent.trim()===e&&(t.target.parentElement.parentElement.remove(),tasks.splice(s,1))}),Tasklist.store(),Tasklist.filter()))}static complete(t){t.target.parentElement.classList.contains("form-check")&&(completed.includes(t.target.parentElement.parentElement.textContent.trim())?completed.forEach(function(e,s){t.target.parentElement.parentElement.textContent.trim()===e&&completed.splice(s,1)}):completed.push(t.target.parentElement.parentElement.textContent.trim()),Tasklist.store())}static store(){localStorage.setItem("tasks",JSON.stringify(tasks)),localStorage.setItem("completed",JSON.stringify(completed))}static deleteAll(){if(confirm("This will delete ALL tasks")){for(;tasklist.firstChild;)tasklist.removeChild(tasklist.firstChild);localStorage.removeItem("tasks"),localStorage.removeItem("completed"),tasks=[],Tasklist.init()}}static filter(t){if(tasks.length>1?(document.querySelector(".clear-tasks").style.display="block",document.querySelector(".filter-wrapper").style.display="block"):(document.querySelector(".clear-tasks").style.display="none",document.querySelector(".filter-wrapper").style.display="none"),t){const e=t.target.value.toLowerCase();document.querySelectorAll(".task").forEach(function(t){-1!==t.querySelector(".form-check-label").textContent.toLowerCase().trim().indexOf(e)?t.setAttribute("style","display: flex !important"):t.setAttribute("style","display: none !important ")})}}}document.addEventListener("DOMContentLoaded",Tasklist.init),form.addEventListener("submit",Tasklist.add),tasklist.addEventListener("click",Tasklist.remove),tasklist.addEventListener("mouseup",Tasklist.complete),clearTasks.addEventListener("click",Tasklist.deleteAll),filter.addEventListener("keyup",Tasklist.filter);